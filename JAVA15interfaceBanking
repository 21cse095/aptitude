
// Interface for common account functionalities
interface Account {
    void deposit(double amount);
    void withdraw(double amount);
    double checkBalance();
}

// Abstract base class for common account properties
abstract class BankAccount implements Account {
    private String accountNumber;
    private double balance;

    public BankAccount(String accountNumber, double initialBalance) {
        this.accountNumber = accountNumber;
        this.balance = initialBalance;
    }

    // Common implementation for deposit, withdraw, and checkBalance
    @Override
    public void deposit(double amount) {
        balance += amount;
        System.out.println("Deposited: $" + amount);
    }

    @Override
    public void withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            System.out.println("Withdrawn: $" + amount);
        } else {
            System.out.println("Insufficient funds");
        }
    }

    @Override
    public double checkBalance() {
        System.out.println("Balance: $" + balance);
        return balance;
    }
}

// Savings Account
class SavingsAccount extends BankAccount {
    private double interestRate;

    public SavingsAccount(String accountNumber, double initialBalance, double interestRate) {
        super(accountNumber, initialBalance);
        this.interestRate = interestRate;
    }

    public void addInterest() {
        double interest = checkBalance() * interestRate;
        deposit(interest);
        System.out.println("Interest added: $" + interest);
    }
}

// Checking Account
class CheckingAccount extends BankAccount {
    private double overdraftLimit;

    public CheckingAccount(String accountNumber, double initialBalance, double overdraftLimit) {
        super(accountNumber, initialBalance);
        this.overdraftLimit = overdraftLimit;
    }

    @Override
    public void withdraw(double amount) {
        double availableFunds = checkBalance() + overdraftLimit;
        if (amount <= availableFunds) {
            super.withdraw(amount);
        } else {
            System.out.println("Exceeds overdraft limit. Withdrawal not allowed.");
        }
    }
}

// Loan Account
class LoanAccount implements Account {
    private String loanNumber;
    private double loanAmount;
    private double balance;

    public LoanAccount(String loanNumber, double loanAmount) {
        this.loanNumber = loanNumber;
        this.loanAmount = loanAmount;
        this.balance = 0;
    }

    @Override
    public void deposit(double amount) {
        System.out.println("Loan account: Deposit not allowed.");
    }

    @Override
    public void withdraw(double amount) {
        if (amount <= balance + loanAmount) {
            balance -= amount;
            System.out.println("Loan repayment: $" + amount);
        } else {
            System.out.println("Exceeds outstanding loan amount. Withdrawal not allowed.");
        }
    }

    @Override
    public double checkBalance() {
        System.out.println("Outstanding Loan Amount: $" + (loanAmount + balance));
        return loanAmount + balance;
    }
}

// Main class for testing
public class NewClass {
    public static void main(String[] args) {
        SavingsAccount savingsAccount = new SavingsAccount("A123", 1000.0, 0.05);
        savingsAccount.deposit(500.0);
        //savingsAccount.checkBalance();
        savingsAccount.addInterest();
        savingsAccount.checkBalance();
        savingsAccount.withdraw(200.0);

        System.out.println();

        CheckingAccount checkingAccount = new CheckingAccount("A456", 1500.0, 500.0);
        checkingAccount.deposit(200.0);
        //checkingAccount.checkBalance();
        checkingAccount.withdraw(1000.0);

        System.out.println();

        LoanAccount loanAccount = new LoanAccount("A789", 5000.0);
        loanAccount.deposit(1000.0);
        //loanAccount.checkBalance();
        loanAccount.withdraw(200.0);
    }
}
\\OUTPUT
\\Deposited: $500.0
\\Balance: $1500.0
\\Deposited: $75.0
\\Interest added: $75.0
\\Balance: $1575.0
\\Withdrawn: $200.0

\\Deposited: $200.0
\\Balance: $1700.0
\\Withdrawn: $1000.0

\\Loan account: Deposit not allowed.
\\Loan repayment: $200.0
\\BUILD SUCCESSFUL (total time: 0 seconds)
